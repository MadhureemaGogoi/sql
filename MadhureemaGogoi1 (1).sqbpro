<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/DELL14/Downloads/New Orders (1).db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1901"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainADDRESS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="90"/><column index="2" value="300"/><column index="3" value="261"/><column index="4" value="111"/><column index="5" value="98"/><column index="6" value="62"/><column index="7" value="66"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="5" mode="0"/></sort><column_widths><column index="1" value="88"/><column index="2" value="195"/><column index="3" value="260"/><column index="4" value="111"/><column index="5" value="186"/><column index="6" value="40"/><column index="7" value="51"/><column index="8" value="53"/><column index="9" value="57"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT_CLASS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="156"/><column index="2" value="155"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- •	1. Write a query to Display the product details (product_class_code, product_id, product_desc, product_price,) as per the following criteria and sort them in descending order of category: a. If the category is 2050, increase the price by 2000 b. If the category is 2051, increase the price by 500 c. If the category is 2052, increase the price by 600. Hint: Use case statement. no permanent change in table required. (60 ROWS) 

select product_class_code, product_id, product_desc, product_price,
case 
     when `PRODUCT_CLASS_CODE` = '2050' then PRODUCT_PRICE+( 2000 )
     when `PRODUCT_CLASS_CODE` = '2051' then PRODUCT_PRICE+( 500 )
     when `PRODUCT_CLASS_CODE` = '2051' then PRODUCT_PRICE+( 600)
     else PRODUCT_PRICE
    end as New_PRODUCT_Price from PRODUCT;

-- •	Write a query to display (product_class_desc, product_id, product_desc, product_quantity_avail ) and Show inventory status of products as below as per their available quantity: a. For Electronics and Computer categories, if available quantity is &lt;= 10, show 'Low stock', 11 &lt;= qty &lt;= 30, show 'In stock', &gt;= 31, show 'Enough stock' b. For Stationery and Clothes categories, if qty &lt;= 20, show 'Low stock', 21 &lt;= qty &lt;= 80, show 'In stock', &gt;= 81, show 'Enough stock' c. Rest of the categories, if qty &lt;= 15 – 'Low Stock', 16 &lt;= qty &lt;= 50 – 'In Stock', &gt;= 51 – 'Enough stock' For all categories, if available quantity is 0, show 'Out of stock'. Hint: Use case statement. (60 ROWS) 	
	
select pc.PRODUCT_CLASS_DESC, p.product_desc, p.product_quantity_avail,
CASE
when pc.product_class_desc = 'Electronics' and p.product_quantity_avail &lt;= 10 then 'Low stock'
when pc.product_class_desc = 'Electronics' and p.product_quantity_avail between 11 and 30 then 'In stock'
when pc.product_class_desc = 'Electronics' and p.product_quantity_avail  &gt;= 31 THEN'Enough stock'
when pc.product_class_desc = 'Computer' and p.product_quantity_avail &lt;= 10 then 'Low stock'
when pc.product_class_desc = 'Computer' and p.product_quantity_avail between 11 and 30 then 'In stock'
when pc.product_class_desc = 'Computer' and p.product_quantity_avail  &gt;= 31 then 'Enough stock' 
when pc.product_class_desc = 'Stationery' and p.product_quantity_avail  &lt;= 20 then 'Low stock'
when pc.product_class_desc = 'Stationery' and p.product_quantity_avail between 21 and 80 then 'In stock'
when pc.product_class_desc = 'Stationery' and p.product_quantity_avail &gt;= 81 then 'Enough stock'
when pc.product_class_desc = 'Clothes' and p.product_quantity_avail  &lt;= 20 then 'Low stock'
when pc.product_class_desc = 'Clothes' and p.product_quantity_avail between 21 and 80 then 'In stock'
when pc.product_class_desc = 'Clothes' and p.product_quantity_avail &gt;= 81 THEN 'Enough stock'
WHEN pc.product_class_desc = '' and p.product_quantity_avail = 0 then 'Out of stock'
when pc.product_class_desc = '' and p.product_quantity_avail &lt;= 15 then 'Low stock'
when pc.product_class_desc = '' and p.product_quantity_avail between 16 and 50 then 'In stock'
when pc.product_class_desc = '' and p.product_quantity_avail &gt;= 51 THEN 'Enough stock'
END
from product p
inner join product_class pc on pc.PRODUCT_CLASS_CODE = p.PRODUCT_CLASS_CODE;
	
-- •	3. Write a query to Show the count of cities in all countries other than USA &amp; MALAYSIA, with more than 1 city, in the descending order of CITIES. (2 rows) 

SELECT COUNTRY, count(*), CITY
FROM ADDRESS
WHERE NOT COUNTRY = 'USA'AND NOT COUNTRY = 'Malaysia'
GROUP by COUNTRY
HAVING count(*)&gt;1
ORDER by CITY DESC;

	
-- •	4. Write a query to display the customer_id,customer full name ,city,pincode,and order details (order id, product class desc, product desc, subtotal(product_quantity * product_price)) for orders shipped to cities whose pin codes do not have any 0s in them. Sort the output on customer name and subtotal. (52 ROWS) 

select oc.CUSTOMER_ID, oc.CUSTOMER_FNAME, a.CITY, a.PINCODE, oh.ORDER_ID, p.PRODUCT_ID, pc.PRODUCT_CLASS_DESC, p.PRODUCT_DESC, oi.PRODUCT_QUANTITY*p.PRODUCT_PRICE as Subtotal
FROM 
ONLINE_CUSTOMER oc
INNER JOIN ADDRESS a on a.ADDRESS_ID = oc.ADDRESS_ID
INNER JOIN ORDER_HEADER oh on oh.CUSTOMER_ID = oc.CUSTOMER_ID
INNER JOIN ORDER_ITEMS oi on oi.ORDER_ID = oh.ORDER_ID
INNER JOIN PRODUCT p on p.PRODUCT_ID = oi.PRODUCT_ID
INNER JOIN PRODUCT_CLASS pc on pc.PRODUCT_CLASS_CODE = p.PRODUCT_CLASS_CODE
WHERE a.PINCODE NOT like '%0%'
ORDER by oc.CUSTOMER_FNAME, Subtotal;

-- •	5. Write a Query to display product id,product description,totalquantity(sum(product quantity) for an item which has been bought maximum no. of times (Quantity Wise) along with product id 201. (USE SUB-QUERY) (1 ROW) 

SELECT p.PRODUCT_ID, p.PRODUCT_DESC, sum(oi.PRODUCT_QUANTITY) as Totalqty, (SELECT p.PRODUCT_ID from PRODUCT p where p.PRODUCT_ID = '201') as PRODUCT_ID
FROM PRODUCT p
LEFT JOIN ORDER_ITEMS oi on oi.PRODUCT_ID = p.PRODUCT_ID;


-- •	6.Write a query to display the customer_id,customer name, email and order details (order id, product desc,product qty, subtotal(product_quantity * product_price)) for all customers even if they have not ordered any item.(225 ROWS) 

select oc.CUSTOMER_ID, oc.CUSTOMER_FNAME, oc.CUSTOMER_EMAIL, oh.ORDER_ID, p.PRODUCT_ID, p.PRODUCT_DESC, oi.PRODUCT_QUANTITY, oi.PRODUCT_QUANTITY*p.PRODUCT_PRICE as Subtotal
FROM 
ONLINE_CUSTOMER oc
LEFT JOIN ORDER_HEADER oh on oh.CUSTOMER_ID = oc.CUSTOMER_ID
LEFT JOIN ORDER_ITEMS oi on oh.ORDER_ID = oi.ORDER_ID
LEFT JOIN PRODUCT p on p.PRODUCT_ID = oi.PRODUCT_ID;


</sql><current_tab id="0"/></tab_sql></sqlb_project>
